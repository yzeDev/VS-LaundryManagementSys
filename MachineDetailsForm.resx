<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAB2GRYR8ywnIP8sKSP/LCkj/ywpI/8sKSP/LCkj/ywpI/8kIRz/IB8ex6mnqJ1OTk7dJSYm/ycn
        KP8nKCj/Jygo/ycoKP8nKCj/Jygo/ycoKP8nKCj/Jygo/ycoKP8nKCj/Jygo/ygpKf8qKyv/Kyws/xsc
        HPgBAQFzAAAAAxgVEPSxnHf/5c6p/+LQsv/k0bP/5dK0/+XStP/l0rT/5tO0/9zKrf9LRTz/e3l6/9PS
        0//Q0ND/1tbW/83Ozv/Jysr/ycrK/8nKyv/Jysr/ycrK/8nKyv/Jysr/ycrK/8nKyv/Ky8v/v8DA/5yd
        nv+bnJ3/fn5//xUVFe0AAABzEQ8L34p5XP++qov/5dK0/s28of+7q5P/vKyU/7yslP+9rZX/sKGL/z46
        M/+Hhof/397f/+Tl5v/o6On/4uPk/9/g4f/f4OH/4eLj/+Hi4//h4uP/4OHi/9/g4f/f4OH/3+Dh/+Hi
        4/+9vr//TE1N/0NFRP9FRkb/NTU2/wkJCfcAAACrICMV/0FFKv+kq3H9bHJJ/kFGKv9DSCz/Q0gs/0RJ
        LP83PCT/JSYi/6ekpf/X19j/3t/g/93e3//f4OH/4eLj/9vc3f/Ly8z/v8DB/8LDxP/R0tP/3+Dh/+Hi
        4//e3+D/3t/g/9zd3v/V1tf/1NXW/9XW1//AwcL/JiYm/xMVDPyElFX/uc12/8negP/G3H//xdp+/8Xa
        fv/F2n7/xdp+/8DUev9DSiv/dXN1/83Mzf/d3t//4OHi/9DR0v+Njo7/Tk5P/zo6Ov87Ozv/Ozo7/z8/
        P/9hYWL/qaqr/9zd3v/f4OH/3t/g/9/g4f/f4OH/4OHi/8rKy/8oKCj/BwgFzEVNK/9uekT/d4RJ/3eE
        Sv93hEr/d4RK/3eESv94hUr/bHhD/y0wIv+TkZL/1NPU/+Dh4v+trq//QkJC/zs6Ov9vbW7/hYOE/4SC
        g/+Fg4X/h4WG/2lnaP82Njb/ZWVm/83Oz//g4eL/3t/g/97f4P/f4OH/ycrK/ycoKP8CAgW5IhpF/0A0
        bP9KQGz/SkBs/0pAbP9KQGz/SkBs/0tAbf9AN1//JSMs/56cnf/Y2Nn/paan/y8vL/9gXl7/dHJz/0ZE
        Q/8+OjP/SkU8/0ZCOv88OTb/WllZ/42LjP9OTU3/Tk5O/8zNzv/f4OH/3t/g/9/g4f/Jysr/Jygo/w8L
        Hf1mTsj/mID5/6uW+f+qlfn/qpX5/6qV+f+qlfn/qpX5/6aR8/86M1X/dnRz/6+trv80NDT/ZmRk/1ZU
        Vf89Nyz/noxu/97KqP/v3Lz/7Nm6/8++ov94bl3/ZWFb/7Wysv9QT0//YmJj/9vc3f/e3+D/3+Dh/8nK
        yv8nKCj/AwIGrCQbR/tANWz/SkFs/0pBbP9KQWz/SkFs/0pBbP9KQW3/QThg/zMxOv+ko6P/XVxc/0xL
        S/9eXV3/RTwv/9W8kv/85cD/++fG//rlxP/65sX//OjG//jlw//gz7L/b2pk/42LjP84Nzf/pKWm/+Hi
        4//f4OH/ycrK/ycoKP8AAAAUAAAAWAAAAGQAAABjAAAAYwAAAGMAAABiFRUVcWpoZ+Z2dHT/tra3/8HC
        w/80NDT/c3Fx/zMwK//BqYH/++K4//nlxP/55cT/+eXE//vnxv/86Mf//ejH//3ox/+AdWT/V1VW/25t
        bf9bXFz/3d7f/9/g4f/Jysr/Jygo/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwbHAANDQ1IeHZ38MnH
        yP/g4eL/mJmZ/z08PP9fXl//XlNA//TYp//548D/+eXE//nlxP/65sX/1sWo/72ulP++r5X/wLGX/56R
        e/8wLiz/iYeI/z09Pf/Mzc7/4OHi/8nKyv8nKCj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AGNVVFT/x8TF/9/f4P98fH3/TUxM/0tJSv+PfV///uKy//3oxv/96cf//unH/7qrkv8+OjX/TU1L/1RT
        Uv9UU1L/UlFQ/yMjIv+Fg4T/PDs8/7u8vP/h4uP/ycrK/ycoKP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAY1VUVP/HxMX/3t/g/3Z3d/9RT0//R0ZG/2ZZQ/+olHT/ppmB/6eag/+Th3L/PTo1/6qq
        q//p6er/qamp/6Kiov+fn6D/Ojo6/4J/gP89PT3/tre4/+Lj5P/Jysr/Jygo/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABjVVRU/8fExf/f3+D/h4iI/0ZFRf9UU1P/KCcn/2JhYf9hYWD/YWFg/2Bg
        X/+xsbH//////+bm5v9vb2//YWFh/1dXV/8fHx//iYeI/zs6O//Cw8T/4eLj/8nKyv8nKCj/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGNVVFT/x8TF/97e3/+sra7/NTQ0/21ra/9ERET/7Ozs////
        ///+/v7//v7+//////////////////7+/v//////tbW1/0FAQP+CgID/RkZH/9bX2P/g4eL/ycrK/yco
        KP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY1VUVP/HxMX/3Nzd/9PU1f9CQ0P/aGZm/z48
        PP+IiYn//f39/////////////////////////////////+jo6P9LSkr/eHZ3/1FPUP99fX7/4eLj/9/g
        4f/Jysr/Jygo/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjVVRU/8fExf/b3N3/4eLj/5SV
        lf8xMDH/dnR0/zIxMf+Li4v/8PDw///////////////////////Y2Nj/VlZW/1hXV/+Afn7/Ojo6/8fI
        yf/f4OH/3+Dh/8nKyv8nKCj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGNVVFT/x8TF/9vc
        3f/f4OH/2drb/2RkZP88Ojr/eHZ2/0JBQf9KSUr/iIiI/6mpqf+hoaH/cXFx/zo6Ov9mZGT/h4WF/zIy
        Mv+dnp//4OHi/97f4P/f4OH/ycrK/ycoKP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY1VU
        VP/HxMX/29zd/97f4P/f4OH/0tPU/2JiY/8yMTH/cG5u/3p4ef9eXF3/T05O/1JRUf9qaWn/i4mJ/2po
        af8zMzP/lJWV/9/g4f/e3+D/3t/g/9/g4f/Jysr/Jygo/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABjVVRU/8fExf/b3N3/3t/g/97f4P/f4OH/2drb/5CQkf8+Pj7/OTg4/1lXWP9qaGn/Z2Vm/1FQ
        Uf84Nzf/VVVW/7O0tf/g4eL/3t/g/97f4P/e3+D/3+Dh/8nKyv8nKCj/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFxcXAAkJCUtycHHyxsTF/9vc3f/e3+D/3t/g/97f4P/f4OH/4eLj/9DR0v+lpab/fH19/2pr
        a/9ub2//iYmK/7a3uP/a29z/4OHi/97f4P/d3t//3d7f/93e3//e3+D/yMnK/ycoKP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABEQ0QAMC8vMZaTlOTGw8T/29zd/97f4P/e3+D/3t/g/97f4P/e3+D/3+Dh/+Hi
        4//i4+T/4eLj/+Hi4//i4+T/4OHi/97f4P/k5eb/4+Tl/+Xm5//q6uv/6urr/+vr7P/LzM3/Jyco/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQAAAABjWFZX/8rHyP/f3+D/4uPk/+Lj5P/i4+T/4uPk/+Lj
        5P/i4+T/4uPk/+Lj5P/i4+T/4uPk/+Lj5P/i4+T/4uPk/+zt7f/r7Oz/7u7v//b29v/29vb/9vb2/9DR
        0v8oKCj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGMvLi7/bmpq/3h3d/96eXn/enl5/3p5
        ef96eXn/enl5/3p5ef96eXn/enl5/3p5ef96eXn/enl5/3p5ef96eXn/enl5/3p5ef96eXn/enl5/3p5
        ef97enr/bm1t/xYVFf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAmOP8IWoD/N2WA/z1n
        gP89Z4D/PWeA/z1ngP89Z4D/O2V9/ztlff87ZX3/O2V9/z1ogP89aIH/PGZ//zxmfv89aIH/PWiB/ztm
        fv88Z3//PWiB/z1ogf81XHH/ChIW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjAFBz/wmE
        vP8yXHP/OF91/zhfdf84X3X/OF50/z5pgf9ywOn/ftP//33S//97z/v/U4ur/0Fth/9vu+T/dsby/0d4
        lP9KfJn/eMn1/2y23/8/a4T/VpKz/3C85P8WJS3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AGMBUHX/AFiB/1JIO/+WiHP/lIZx/5WHcf+KfGj/KC0t/2at1v980f//fNH//2Sp0P8hLjb/MDtC/z1n
        fv9OhaP/KSQ9/yckOv9Tjq7/OF1y/09FOf8sNDb/XJ3C/xcnMP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAYwFQdf8BW4T/NDAp/1xXTf9bVkz/W1ZM/1VQRv8fJyr/Z6/X/3zS//980v//a7Xe/yU5
        RP8jLjX/Sn2a/1qYu/8jJzn/Iyk7/16gxP9FdI7/NDMu/y5ASf9ip83/FyYv/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABjAEtu/w2T0v9Hhaj/Toan/06Gp/9Ohqf/Toan/1SPsf9wven/dcf1/3XG
        9P91xvT/Y6fO/1iVuP9xv+z/dMTx/1ycwP9dn8P/dMXz/3C96f9Wk7b/ZavU/2u03v8VIyz/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFsAExv9DjZI/ytDUP8vRFH/L0RR/y9EUf8vRFH/L0RR/y1B
        Tf8tQUz/LUFM/y1BTP8uQ0//LkRQ/y1BTf8tQUz/LkNP/y5DT/8tQUz/LUFN/y5EUP8uQ0//IDI8/wUJ
        C/cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAKQyMC/+h4WE/5qZmf+cm5v/nJub/5yb
        m/+cm5v/nJub/5ybm/+cm5v/nJub/5ybm/+cm5v/nJub/5ybm/+cm5v/nJub/5ybm/+cm5v/nZyc/39+
        fv8VFRXtAAAAcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQcHB7YhICD/KSoq/yor
        K/8qKyv/Kisr/yorK/8qKyv/Kisr/yorK/8qKyv/Kisr/yorK/8qKyv/Kisr/yorK/8qKyv/Kisr/yor
        K/8rLCz/Gxwc+AEBAXMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP4A
        AAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4A
        AAD+AAAA/gAAAP4AAAD+AAAA/gAAAP8AAAA=
</value>
  </data>
</root>