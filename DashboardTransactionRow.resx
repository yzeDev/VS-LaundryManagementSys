<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCheck.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>